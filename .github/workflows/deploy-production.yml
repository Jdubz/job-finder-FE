name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  FIREBASE_PROJECT_ID: 'static-sites-257923'

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://job-finder-production.web.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Deploying version: $VERSION"

      - name: Build for production
        run: npm run build:production
        env:
          NODE_ENV: production
          VITE_APP_VERSION: ${{ steps.version.outputs.version }}

      - name: Verify build
        run: |
          if [ ! -d "dist" ] || [ ! -f "dist/index.html" ]; then
            echo "❌ Build verification failed"
            exit 1
          fi
          echo "✅ Build verification successful"
          du -sh dist

      - name: Deploy to Firebase Hosting
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          target: production

      - name: Verify deployment
        run: |
          echo "Waiting for deployment..."
          sleep 5
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://job-finder-production.web.app)
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Production deployed successfully"
          else
            echo "⚠️ HTTP $HTTP_CODE - may still be propagating"
          fi

      - name: Create deployment tag
        if: success()
        run: |
          TAG_NAME="deploy-production-$(date +%Y%m%d-%H%M%S)"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG_NAME" -m "Production deployment $(date +%Y-%m-%d)"
          git push origin "$TAG_NAME" || echo "Tag push skipped"

      - name: Purge Cloudflare cache
        if: success()
        continue-on-error: true
        run: |
          if [ -n "${{ secrets.CLOUDFLARE_ZONE_ID }}" ] && [ -n "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data '{"purge_everything":true}' > /dev/null && echo "✅ Cloudflare cache purged"
          fi

      - name: Deployment summary
        if: always()
        run: |
          echo "## 🚀 Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://job-finder-production.web.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Custom Domain**: https://job-finder.joshwentworth.com" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Rollback" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "firebase hosting:rollback --site job-finder-production" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
